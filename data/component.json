[
	{
		"title": "Glyphicons 字体图标",
		"id": "component1",
		"content": "所有可用的图标包括250多个来自 Glyphicon Halflings 的字体图标。Glyphicons Halflings 一般是收费的，但是他们的作者允许 Bootstrap 免费使用。为了表示感谢，希望你在使用时尽量为 Glyphicons 添加一个友情链接。"
	},
	{
		"title": "下拉菜单",
		"id": "component2",
		"content": "用于显示链接列表的可切换、有上下文的菜单。下拉菜单的 JavaScript插件让它具有了交互性。将下拉菜单触发器和下拉菜单都包裹在 .dropdown 里，或者另一个声明了 position: relative; 的元素。然后加入组成菜单的 HTML 代码。"
	},
	{
		"title": "按钮组",
		"id": "component3",
		"content": "通过按钮组容器把一组按钮放在同一行里。通过与按钮插件联合使用，可以设置为单选框或多选框的样式和行为。按钮组中的工具提示和弹出框需要特别的设置当为 .btn-group 中的元素应用工具提示或弹出框时，必须指定 container: 'body' 选项，这样可以避免不必要的副作用（例如工具提示或弹出框触发时，会让页面元素变宽和/或失去圆角）"
	},
	{
		"title": "按钮式下拉菜单",
		"id": "component4",
		"content": "把任意一个按钮放入 .btn-group 中，然后加入适当的菜单标签，就可以让按钮作为菜单的触发器了。只要改变一些基本的标记，就能把按钮变成下拉菜单的开关。"
	},
	{
		"title": "输入框组",
		"id": "component5",
		"content": "通过在文本输入框 <input> 前面、后面或是两边加上文字或按钮，可以实现对表单控件的扩展。为 .input-group 赋予 .input-group-addon 类，可以给 .form-control 的前面或后面添加额外的元素。"
	},
	{
		"title": "导航",
		"id": "component6",
		"content": "在标签页上使用导航需要依赖 JavaScript 标签页插件由于标签页需要控制内容区的展示，因此，你必须使用 标签页组件的 JavaScript 插件。另外还要添加 role 和 ARIA 属性 – 详细信息请参考该插件的 实例。"
	},
	{
		"title": "导航条",
		"id": "component7",
		"content": "默认样式的导航条 导航条是在您的应用或网站中作为导航页头的响应式基础组件。它们在移动设备上可以折叠（并且可开可关），且在视口（viewport）宽度增加时逐渐变为水平展开模式。"
	},
	{
		"title": "路径导航",
		"id": "component8",
		"content": "在一个带有层次的导航结构中标明当前页面的位置。各路径间的分隔符已经自动通过 CSS 的 :before 和 content 属性添加了。"
	},
	{
		"title": "分页",
		"id": "component9",
		"content": "为您的网站或应用提供带有展示页码的分页组件，或者可以使用简单的翻页组件 1.默认分页 2.禁用和激活状态"
	},
	{
		"title": "标签",
		"id": "component10",
		"content": "如果你有大量的设置为 inline 属性的标签全部放在一个较窄的容器元素内，在页面上展示这些标签就会出现问题，每个标签就会有自己的一个 inline-block 元素（就像图标一样）。解决的办法是为每个标签都设置为 display: inline-block; 属性。关于这个问题以及实例，请参考 #13219 。"
	},
	{
		"title": "徽章",
		"id": "component11",
		"content": "给链接、导航等元素嵌套 <span class='badge'> 元素，可以很醒目的展示新的或未读的信息条目。Bootstrap 提供了内置的样式，让胶囊式导航内处于激活状态的元素所包含的徽章展示相匹配的样式。"
	},
	{
		"title": "巨幕",
		"id": "component12",
		"content": "这是一个轻量、灵活的组件，它能延伸至整个浏览器视口来展示网站上的关键内容。如果需要让巨幕组件的宽度与浏览器宽度一致并且没有圆角，请把此组件放在所有 .container 元素的外面，并在组件内部添加一个 .container 元素。"
	},
	{
		"title": "页头",
		"id": "component13",
		"content": "页头组件能够为 h1 标签增加适当的空间，并且与页面的其他部分形成一定的分隔。它支持 h1 标签内内嵌 small 元素的默认效果，还支持大部分其他组件（需要增加一些额外的样式）。"
	},
	{
		"title": "缩略图",
		"id": "component14",
		"content": "通过缩略图组件扩展 Bootstrap 的 栅格系统，可以很容易地展示栅格样式的图像、视频、文本等内容。如果你想实现一个类似 Pinterest 的页面效果（不同高度和/宽度的缩略图顺序排列）的话，你需要使用一个第三方插件，比如 Masonry、Isotope 或 Salvattore。"
	},
	{
		"title": "警告框",
		"id": "component15",
		"content": "警告框组件通过提供一些灵活的预定义消息，为常见的用户动作提供反馈消息。"
	},
	{
		"title": "进度条",
		"id": "component16",
		"content": "通过这些简单、灵活的进度条，为当前工作流程或动作提供实时反馈。"
	},
	{
		"title": "媒体对象",
		"id": "component17",
		"content": "这是一个抽象的样式，用以构建不同类型的组件，这些组件都具有在文本内容的左或右侧对齐的图片（就像博客评论或 Twitter 消息等）。"
	},
		{
		"title": "列表组",
		"id": "component18",
		"content": "最简单的列表组仅仅是一个带有多个列表条目的无序列表，另外还需要设置适当的类。我们提供了一些预定义的样式，你可以根据自身的需求通过 CSS 自己定制。"
	},
		{
		"title": "面版",
		"id": "component19",
		"content": "虽然不总是必须，但是某些时候你可能需要将某些 DOM 内容放到一个盒子里。对于这种情况，可以试试面板组件。"
	},
	{
		"title": "具有响应式特性的嵌入内容",
		"id": "component20",
		"content": "根据被嵌入内容的外部容器的宽度，自动创建一个固定的比例，从而让浏览器自动确定视频或 slideshow 的尺寸，能够在各种设备上缩放。这些规则被直接应用在 <iframe>、<embed>、<video> 和 <object> 元素上。如果你希望让最终样式与其他属性相匹配，还可以明确地使用一个派生出来的 .embed-responsive-item 类。"
	}

]